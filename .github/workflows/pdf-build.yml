---
name: Build PDF Release
on:
  pull_request:
jobs:
  Build:
    name: Build PDF release bundle
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Install Ubuntu dependencies
        run: |
          sudo apt-get -y install chromium-browser
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install marp
        run: |
          npm install --save-dev @marp-team/marp-cli
      - name: Build PDFs
        run: |
          mkdir ~/output
          for input in `grep -l 'marp: true' *.md */*.md`
          do
            output=`echo -n $input | sed -e 's/.md$//g'`
            echo "$output.pdf"
            npx marp --allow-local-files "$input" -o "$output.pdf"
          done
      - name: Zip PDFs
        run: |
          find . -name "*pdf" -exec zip -g PDF.zip {} \;
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.sha }}
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
          asset_path: ./PDF.zip
          asset_name: PDF.zip
          asset_content_type: application/zip
