---
name: Build PDF Release
on:
  pull_request:
jobs:
  Build:
    name: Build PDF release bundle
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Install Ubuntu dependencies
        run: |
          sudo apt-get -y install chromium-browser npm
      - name: Install marp
        run: |
          npm install --save-dev @marp-team/marp-cli
      - name: Build PDFs
        run: |
          mkdir ~/output
          for file in `grep -l 'marp: true' *.md */*.md`
          do
            input=$file
            output=`echo -n $input | sed -e 's/^.\///g; s/.md$//g' | tr -c [:alnum:] '-'`
            echo "$output.pdf"
            npx marp --allow-local-files $input -o ~/output/$output.pdf
          done
      - name: Zip PDFs
        run: |
          cd ~/output
          zip PDF.zip *pdf
      - uses: actions/upload-artifact@v2
        with:
            name: PDF Bundle
            path: ~/output/PDF.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
          asset_path: PDF.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip
